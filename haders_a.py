import datetime

from aiogram import Router
from aiogram.filters import CommandStart, Text, Command
from aiogram.types import Message, CallbackQuery
from keyboards_a import period, mounths
from posgSQL import write_users_table, show_categories_table, shows_history_day, shows_last_item, shows_history_months
from service import test_in_dig, record_notes

router: Router = Router()


def main_filter(message: Message) -> bool:
    return test_in_dig(message.text)


def date_filter(message: Message) -> bool:
    if len(message.text.split("-")) == 3:
        return True


@router.message(main_filter)
async def process_start_command(message: Message):
    record_notes(message.text, message.from_user.id)
    await message.answer(text='–ü–æ–Ω—è–ª-–ø—Ä–∏–Ω—è–ª,–∑–∞–ø–æ–º–Ω–∏–ª-–∑–∞–ø–∏—Å–∞–ª!')


@router.message(CommandStart())
async def process_start_command(message: Message):
    telega_id = (message.from_user.id,)
    name = (message.from_user.username,)
    write_users_table(name=name, telega_id=telega_id)
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å {message.from_user.username}\!\n"
                              "–Ø –±–æ—Ç –∫–æ—Ç–æ—Ä–æ—ã–π –±—É–¥–µ—Ç –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã\.\n"
                              '–ó–∞–ø–∏—à–∏—Ç–µ *—Å—É–º–º—É –∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π* –∏ _–æ—Ç–ø—Ä–∞–≤—Ç–µ –º–Ω–µ_ \n'
                              '–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞–±—Ä–∞–≤ \/help –∏–ª–∏ –≤ –º–µ–Ω—é',
                         parse_mode='MarkdownV2')


@router.message(date_filter)
async def process_text_endswith_bot(message: Message):
    text = ''.join([str_day + '\n' for str_day in shows_history_day(message.text, message.from_user.id)])
    total_day = f'–ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å ' \
                f'{sum([int(i.split()[0]) for i in shows_history_day(message.text, message.from_user.id)])}'
    await message.answer(text=f'{text}\n{total_day}')


@router.message(Command(commands=['last']))
async def process_text_endswith_bot(message: Message):
    items = ''.join([f'{i[0]} - {i[1]}' + '\n' for i in shows_last_item(message.from_user.id)[::-1]])
    await message.answer(text=items)


@router.message(Command(commands=['help']))
async def show_help(message: Message):
    await message.answer(text='–ß—Ç–æ –±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø–∏—Å—å –Ω—É–∂–Ω–æ:\n'
                              '–≤–≤–µ—Å—Ç–∏ –µ–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: \<—Å—É–º–º–∞\>\ \<–∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π\>\ \<–∫–∞—Ç–µ–≥–æ—Ä–∏—è\>\n'
                              '–ø—Ä–∏–º–µ—Ä\ _*200 –±–∞—Ä —É –¥—è–¥–∏ –í–∞—Å–∏ 4*_\n'
                              '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –≤ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ \/categories\n'
                              'e—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –æ–Ω –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç –µ–µ –∞–≤—Ç–æ–º–∞—Ç–æ–º –Ω–∞ \'–¥—Ä—É–≥–æ–µ\' \n'
                              '–í –º–µ–Ω—é –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å _*–ò—Å—Ç–æ—Ä–∏—é –∑–∞–ø–∏—Å–µ–π*_ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ\/history\n'
                              '_–µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–∏—à–∏—Ç–µ_ \@krekotend',
                         parse_mode='MarkdownV2')


@router.message(Command(commands=['history']))
async def process_history_answer(message: Message):
    telega_id = (message.from_user.id,)
    await message.answer(text='–í—ã–±–µ—Ä–µ—Ç–∏ –ø–µ—Ä–∏–æ–¥ üëá',
                         reply_markup=period)


@router.message(Command(commands=['categories']))
async def show_categories(message: Message):
    text = ''.join([f'''{i[0]} - {i[1]}\n''' for i in show_categories_table()])
    await message.answer(text=text)


@router.message(Command(commands=['dice']))
async def cmd_dice_in_group(message: Message):
    await message.answer_dice(emoji="üé≤")


@router.message(Command(commands=['contacts']))
async def show_contacts(message: Message):
    await message.answer(text='*_I will be glad to accept suggestions or wishes_*\n'
                              '||In the subject of the email\, indicate Tg\_Exchequer||\n'
                              '||Krekotend\@gmail\.com||',
                         parse_mode='MarkdownV2')


@router.callback_query(Text(text=['–°–µ–≥–æ–¥–Ω—è']))
async def shows_today(callback: CallbackQuery):
    day = datetime.date.today()
    text = ''.join([i + '\n' for i in shows_history_day(day, callback.from_user.id)])
    total_day = f'–ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å {sum([float(i.split()[0]) for i in shows_history_day(day, callback.from_user.id)])}'
    # if callback.message.text != '–°–µ–≥–æ–¥–Ω—è':
    await callback.message.edit_text(text=f'{text}\n{total_day}')

@router.callback_query(Text(text=['–í—á–µ—Ä–∞']))
async def shows_yesterday(callback: CallbackQuery):
    yesterday = datetime.datetime.today() - datetime.timedelta(days=1)
    text = ''.join([i + '\n' for i in shows_history_day(yesterday.date(), callback.from_user.id)])
    total_day = f'–ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å ' \
                f'{sum([float(i.split()[0]) for i in shows_history_day(yesterday.date(), callback.from_user.id)])}'
    await callback.message.edit_text(text=f'{text}\n{total_day}')


@router.callback_query(Text(text=['–ú–µ—Å—è—Ü']))
async def shows_mounth(callback: CallbackQuery):
    await callback.message.edit_text(text=f'–í—ã–±–µ—Ä–µ—Ç–∏ –º–µ—Å—è—Ü', reply_markup=mounths)


@router.callback_query(Text(text=['1', '3', '2', '4', '5', '6', '7', '8', '9', '10', '11', '12']))
async def shows_mounth(callback: CallbackQuery):
    month = int(callback.data)
    text = ''.join([i + '\n' for i in shows_history_months(month, callback.from_user.id)])
    total_day = f'–ò—Ç–æ–≥–æ –∑–∞ –º–µ—Å—è—Ü ' \
                f'{sum([float(i.split()[0]) for i in shows_history_months(month, callback.from_user.id)])}'
    await callback.message.edit_text(text=f'{text}\n{total_day}')


@router.message()
async def other(message: Message):
    await message.reply(text='–ö–æ–≥–¥–∞ –ø–æ–¥—Ä—É–∂—É—Å—Ç—å —Å ChatGPT, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–π–º—É —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ ,'
                             ' –∞ –ø–æ–∫–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ —è –ø–æ–Ω–∏–º–∞—é')
